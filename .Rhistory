geom_hline(yintercept = 0, color = "red", linetype = "dashed", size = 1) +
scale_fill_viridis_d() +
scale_color_viridis_d() +
theme_bw()
ggplot(toua_chl, aes(element, valeur, fill = element))+
stat_summary(fun = "median", geom = "bar") +
stat_summary(fun.data = median(valeur), geom = "errorbar", width = 0.2)+
geom_hline(yintercept = 0, color = "red", linetype = "dashed", size = 1) +
scale_fill_viridis_d() +
scale_color_viridis_d() +
theme_bw()
ggplot(toua_chl, aes(element, valeur, fill = element))+
stat_summary(fun = "median", geom = "bar") +
stat_summary(fun.data = median(), geom = "errorbar", width = 0.2)+
geom_hline(yintercept = 0, color = "red", linetype = "dashed", size = 1) +
scale_fill_viridis_d() +
scale_color_viridis_d() +
theme_bw()
ggplot(toua_chl, aes(element, valeur, fill = element))+
stat_summary(fun = "median", geom = "bar") +
stat_summary(fun.data = ? , geom = "errorbar", width = 0.2)+
ggplot(toua_chl, aes(element, valeur, fill = element))+
stat_summary(fun = "median", geom = "bar") +
stat_summary(fun.data = mean_se , geom = "errorbar", width = 0.2)+
geom_hline(yintercept = 0, color = "red", linetype = "dashed", size = 1) +
scale_fill_viridis_d() +
scale_color_viridis_d() +
theme_bw()
ggerrorplot(toua_chl, element, valeur, desc_stat = "median")
ggplot(toua_chl, aes(element, valeur, fill = element))+
stat_summary(fun = "median", geom = "bar") +
stat_summary(fun.data = mean_se , geom = "errorbar", width = 0.2)+
geom_hline(yintercept = 0, color = "red", linetype = "dashed", size = 1) +
scale_fill_viridis_d() +
scale_color_viridis_d() +
theme_bw()
ggerrorplot(toua_chl, aes(element, valeur), desc_stat = "median")
ggplot(toua_chl, aes(element, valeur, fill = element))+
stat_summary(fun = "median", geom = "bar") +
stat_summary(fun.data = median_mad(valeur) , geom = "errorbar", width = 0.2)+
geom_hline(yintercept = 0, color = "red", linetype = "dashed", size = 1) +
scale_fill_viridis_d() +
scale_color_viridis_d() +
theme_bw()
ggplot(toua_chl, aes(element, valeur, fill = element))+
stat_summary(fun = "median", geom = "bar") +
stat_summary(fun.data = median_mad() , geom = "errorbar", width = 0.2)+
geom_hline(yintercept = 0, color = "red", linetype = "dashed", size = 1) +
scale_fill_viridis_d() +
scale_color_viridis_d() +
theme_bw()
ggplot(toua_chl, aes(element, valeur, fill = element))+
stat_summary(fun = "median", geom = "bar") +
stat_summary(fun.data = median_mad , geom = "errorbar", width = 0.2)+
geom_hline(yintercept = 0, color = "red", linetype = "dashed", size = 1) +
scale_fill_viridis_d() +
scale_color_viridis_d() +
theme_bw()
ggerrorplot(toua_chl, aes(element, valeur), desc_stat = "median")
ggplot(toua_chl, aes(element, valeur, fill = element))+
stat_summary(fun = "median", geom = "bar") +
stat_summary(fun.data = median_iqr , geom = "errorbar", width = 0.2)+
geom_hline(yintercept = 0, color = "red", linetype = "dashed", size = 1) +
scale_fill_viridis_d() +
scale_color_viridis_d() +
theme_bw()
ggerrorplot(toua_chl, aes(element, valeur), desc_stat = "median")
ggplot(toua_chl, aes(element, valeur, fill = element))+
stat_summary(fun = "median", geom = "bar") +
stat_summary(fun.data = median_range , geom = "errorbar", width = 0.2)+
geom_hline(yintercept = 0, color = "red", linetype = "dashed", size = 1) +
scale_fill_viridis_d() +
scale_color_viridis_d() +
theme_bw()
ggerrorplot(toua_chl, aes(element, valeur), desc_stat = "median")
ggplot(toua_chl, aes(element, valeur, fill = element))+
stat_summary(fun = "median", geom = "bar") +
stat_summary(fun.data = median , geom = "errorbar", width = 0.2)+
geom_hline(yintercept = 0, color = "red", linetype = "dashed", size = 1) +
scale_fill_viridis_d() +
scale_color_viridis_d() +
theme_bw()
ggplot(toua_chl, aes(element, valeur, fill = element))+
stat_summary(fun = "median", geom = "bar") +
stat_summary(fun.data = median_mad , geom = "errorbar", width = 0.2)+
geom_hline(yintercept = 0, color = "red", linetype = "dashed", size = 1) +
scale_fill_viridis_d() +
scale_color_viridis_d() +
theme_bw()
ggerrorplot(toua_chl, aes(element, valeur), desc_stat = "median")
ggplot(toua_chl, aes(element, valeur, fill = element))+
stat_summary(fun = "mean", geom = "bar") +
stat_summary(fun.data = median_mad , geom = "errorbar", width = 0.2)+
geom_hline(yintercept = 0, color = "red", linetype = "dashed", size = 1) +
scale_fill_viridis_d() +
scale_color_viridis_d() +
theme_bw()
ggerrorplot(toua_chl, aes(element, valeur), desc_stat = "median")
ggplot(toua_chl, aes(element, valeur, fill = element))+
stat_summary(fun = "median", geom = "bar") +
stat_summary(fun.data = median_mad , geom = "errorbar", width = 0.2)+
geom_hline(yintercept = 0, color = "red", linetype = "dashed", size = 1) +
scale_fill_viridis_d() +
scale_color_viridis_d() +
theme_bw()
ggerrorplot(toua_chl, aes(element, valeur), desc_stat = "median")
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
library(ggpubr)
toua <- read.csv2("TOUA_phenotypes.csv")
head(toua)
install.packages('naniar')
library(naniar)
toua_no_out <- toua
df %>% replace_with_na(replace = list(x = -99))
k= 3
for (i in 2:17) {
binf <- median(toua[,i]) - k* mad(toua[,i])
bsup <- median(toua[,i]) + k* mad(toua[,i])
outlier_idx <- which(toua_no_out[,i] < binf | toua_no_out[,i] > bsup)
if (length(outlier_idx) == 0) {
toua_no_out = toua_no_out
}
else{
toua_no_out  %>% replace_with_na(replace = list(x = outlier_idx))
}
print(outlier_idx)
}
View(toua_no_out)
library(naniar)
toua_no_out <- toua
df %>% replace_with_na(replace = list(x = -99))
k= 3
for (i in 2:17) {
binf <- median(toua[,i]) - k* mad(toua[,i])
bsup <- median(toua[,i]) + k* mad(toua[,i])
outlier_idx <- which(toua_no_out[,i] < binf | toua_no_out[,i] > bsup)
if (length(outlier_idx) == 0) {
toua_no_out = toua_no_out
}
else{
toua_no_out  %>% replace_with_na(replace = list(x = outlier_idx))
print(toua_no_out[outlier_idx,i])
}
#print(outlier_idx)
}
library(naniar)
toua_no_out <- toua
df %>% replace_with_na(replace = list(x = -99))
k= 3
for (i in 2:17) {
binf <- median(toua[,i]) - k* mad(toua[,i])
bsup <- median(toua[,i]) + k* mad(toua[,i])
outlier_idx <- which(toua_no_out[,i] < binf | toua_no_out[,i] > bsup)
if (length(outlier_idx) == 0) {
toua_no_out = toua_no_out
}
else{
toua_no_out  %>% replace_with_na(replace = list(x = toua_no_out[outlier_idx,i]))
print(toua_no_out[outlier_idx,i])
}
#print(outlier_idx)
}
library(naniar)
toua_no_out <- toua
df %>% replace_with_na(replace = list(x = -99))
k= 3
for (i in 2:17) {
binf <- median(toua[,i]) - k* mad(toua[,i])
bsup <- median(toua[,i]) + k* mad(toua[,i])
outlier_idx <- which(toua_no_out[,i] < binf | toua_no_out[,i] > bsup)
if (length(outlier_idx) == 0) {
toua_no_out = toua_no_out
}
else{
toua_no_out %>% replace_with_na(replace = list(x = toua_no_out[outlier_idx,i]))
print(toua_no_out[outlier_idx,i])
}
#print(outlier_idx)
}
ggplot(toua_chl, aes(element, valeur, fill = element))+
stat_summary(fun = "mean", geom = "bar") +
stat_summary(fun.data = median_mad , geom = "errorbar", width = 0.2)+
geom_hline(yintercept = 0, color = "red", linetype = "dashed", size = 1) +
scale_fill_viridis_d() +
scale_color_viridis_d() +
theme_bw()
ggplot(toua_chl, aes(element, valeur, fill = element))+
stat_summary(fun = "median", geom = "bar") +
stat_summary(fun.data = median_mad , geom = "errorbar", width = 0.2)+
geom_hline(yintercept = 0, color = "red", linetype = "dashed", size = 1) +
scale_fill_viridis_d() +
scale_color_viridis_d() +
theme_bw()
ggerrorplot(toua_chl, aes(element, valeur), desc_stat = "median")
i = 2
while (i < 17) {
plot(toua_no_out[,i+1], toua_no_out[,i], xlab = names(toua_no_out[i+1]), ylab = names(toua_no_out[i]),asp=1)
abline(0,1, col = "blue")
i = i + 2}
ggplot(toua_chl, aes(element, valeur, fill = element))+
stat_summary(fun = "mean", geom = "bar") +
stat_summary(fun.data = mean_se , geom = "errorbar", width = 0.2)+
geom_hline(yintercept = 0, color = "red", linetype = "dashed", size = 1) +
scale_fill_viridis_d() +
scale_color_viridis_d() +
theme_bw()
library(lawstat)
i = 2
while (i < 17) {
print(paste("Test de Levene entre les données", names(toua_no_out[i]), "et", names(toua_no_out[i+1])))
print(levene.test(toua_no_out[,i+1], toua_no_out[,i])))
library(lawstat)
i = 2
while (i < 17) {
print(paste("Test de Levene entre les données", names(toua_no_out[i]), "et", names(toua_no_out[i+1])))
print(levene.test(toua_no_out[,i+1], toua_no_out[,i]))
i = i + 2
}
View(reg_no_out)
library(lawstat)
i = 2
while (i < 17) {
print(paste("Test de Levene entre les données", names(reg_no_out[i]), "et", names(reg_no_out[i+1])))
a = reg_no_out[,i+1]
e = reg_no_out[,i]
values = c(a,e)
factor = c(rep('aCo2',lenght(a)), rep('eCo2',length(e)))
print(paste("p-value = ",levene.test(values, factor)))
i = i + 2
}
library(lawstat)
i = 2
while (i < 17) {
print(paste("Test de Levene entre les données", names(reg_no_out[i]), "et", names(reg_no_out[i+1])))
a = reg_no_out[,i+1]
e = reg_no_out[,i]
values = c(a,e)
factor = c(rep('aCo2',length(a)), rep('eCo2',length(e)))
print(paste("p-value = ",levene.test(values, factor)))
i = i + 2
}
library(lawstat)
i = 2
while (i < 17) {
print(paste("Test de Levene entre les données", names(toua_no_out[i]), "et", names(toua_no_out[i+1])))
a = toua_no_out[,i+1]
e = toua_no_out[,i]
values = c(a,e)
factor = c(rep('aCo2',length(a)), rep('eCo2',length(e)))
print(paste("p-value = ",levene.test(values, factor)))
i = i + 2
}
library(lawstat)
i = 2
while (i < 17) {
print(paste("Test de Levene entre les données", names(toua_no_out[i]), "et", names(toua_no_out[i+1])))
a = toua_no_out[,i+1]
e = toua_no_out[,i]
values = c(a,e)
factor = c(rep('aCo2',length(a)), rep('eCo2',length(e)))
print(paste("p-value = ",levene.test(values, factor)$p.value))
i = i + 2
}
library(lawstat)
i = 2
while (i < 17) {
print(paste("Test de Levene entre les données", names(reg_no_out[i]), "et", names(reg_no_out[i+1])))
a = reg_no_out[,i+1]
e = reg_no_out[,i]
values = c(a,e)
factor = c(rep('aCo2',length(a)), rep('eCo2',length(e)))
print(paste("p-value = ",levene.test(values, factor)$p.value))
i = i + 2
}
library(lawstat)
i = 2
while (i < 17) {
print(paste("Test de Levene entre les données", names(lang_no_out[i]), "et", names(lang_no_out[i+1])))
a = lang_no_out[,i+1]
e = lang_no_out[,i]
values = c(a,e)
factor = c(rep('aCo2',length(a)), rep('eCo2',length(e)))
print(paste("p-value = ",levene.test(values, factor)))
i = i + 2
}
library(lawstat)
i = 2
while (i < 17) {
print(paste("Test de Levene entre les données", names(lang_no_out[i]), "et", names(lang_no_out[i+1])))
a = lang_no_out[,i+1]
e = lang_no_out[,i]
values = c(a,e)
factor = c(rep('aCo2',length(a)), rep('eCo2',length(e)))
print(paste("p-value = ",levene.test(values, factor)$p.value))
i = i + 2
}
print("Test de Fisher entre les données Mg_aCo2 et Mg_eCo2")
print(paste("p-value = ",var.test(toua_no_out$Mg_aCo2, toua_no_out$Mg_eCo2, paired = TRUE)$p.value))
print("Test de Fisher entre les données Mn_aCo2 et Mn_eCo2")
print(paste("p-value = ",var.test(toua_no_out$Mn_aCo2, toua_no_out$Mn_eCo2, paired = TRUE)$p.value))
print("Test de Fisher entre les données Zn_aCo2 et Zn_eCo2")
print(paste("p-value = ",var.test(toua_no_out$Zn_aCo2, toua_no_out$Zn_eCo2, paired = TRUE)$p.value))
print("Test de Fisher entre les données C_aCo2 et C_eCo2")
print(paste("p-value = ",var.test(toua_no_out$C_aCo2, toua_no_out$C_eCo2, paired = TRUE)$p.value))
print("Test de Fisher entre les données N_aCo2 et N_eCo2")
print(paste("p-value = ",var.test(toua_no_out$N_aCo2, toua_no_out$N_eCo2, paired = TRUE)$p.value))
print("Test de Fisher entre les données Mg_aCo2 et Mg_eCo2")
print(paste("p-value = ",var.test(reg_no_out$Mg_aCo2, reg_no_out$Mg_eCo2, paired = TRUE)$p.value))
print("Test de Fisher entre les données Mn_aCo2 et Mn_eCo2")
print(paste("p-value = ",var.test(reg_no_out$Mn_aCo2, reg_no_out$Mn_eCo2, paired = TRUE)$p.value))
print("Test de Fisher entre les données Cu_aCo2 et Cu_eCo2")
print(paste("p-value = ",var.test(reg_no_out$Cu_aCo2, reg_no_out$Cu_eCo2, paired = TRUE)$p.value))
library(lawstat)
i = 2
while (i < 17) {
print(paste("Test de Levene entre les données", names(reg_no_out[i]), "et", names(reg_no_out[i+1])))
a = reg_no_out[,i+1]
e = reg_no_out[,i]
values = c(a,e)
factor = c(rep('aCo2',length(a)), rep('eCo2',length(e)))
print(paste("p-value = ",levene.test(values, factor)$p.value))
i = i + 2
}
library(lawstat)
i = 2
while (i < 17) {
print(paste("Test de Levene entre les données", names(lang_no_out[i]), "et", names(lang_no_out[i+1])))
a = lang_no_out[,i+1]
e = lang_no_out[,i]
values = c(a,e)
factor = c(rep('aCo2',length(a)), rep('eCo2',length(e)))
print(paste("p-value = ",levene.test(values, factor)$p.value))
i = i + 2
}
print("Test de Fisher entre les données C_aCo2 et C_eCo2")
print(paste("p-value = ",var.test(lang_no_out$C_aCo2, lang_no_out$C_eCo2, paired = TRUE)$p.value))
print("Test de Fisher entre les données N_aCo2 et N_eCo2")
print(paste("p-value = ",var.test(lang_no_out$N_aCo2, lang_no_out$N_eCo2, paired = TRUE)$p.value))
print("Test de Fisher entre les données Cu_aCo2 et Cu_eCo2")
print(paste("p-value = ",var.test(lang_no_out$Cu_aCo2, lang_no_out$Cu_eCo2, paired = TRUE)$p.value))
library(ggplot2)
library(RColorBrewer)
library(ggpubr)
reg_long = melt(reg_no_out_no_ch)
reg_long$element = stringr::str_split_fixed(reg_long$variable, "_",2)[,1]
reg_long$Co2 = stringr::str_split_fixed(reg_long$variable, "_",2)[,2]
nb.cols <- 16
mycolors <- colorRampPalette(brewer.pal(8, "Paired"))(nb.cols)
ggplot(data = reg_long, aes(x = Co2, y = value)) +
geom_violin(aes(fill = variable), draw_quantiles = c(1.25,0.5,0.75)) +
facet_wrap( ~ element, scales = "free") +
scale_fill_manual(values = mycolors) +
stat_compare_means(paired = TRUE, method = "wilcox")
library(ggplot2)
library(RColorBrewer)
library(ggpubr)
reg_long = melt(reg_no_out_no_ch)
reg_long$element = stringr::str_split_fixed(reg_long$variable, "_",2)[,1]
reg_long$Co2 = stringr::str_split_fixed(reg_long$variable, "_",2)[,2]
nb.cols <- 16
mycolors <- colorRampPalette(brewer.pal(8, "Paired"))(nb.cols)
ggplot(data = reg_long, aes(x = Co2, y = value)) +
geom_violin(aes(fill = variable), draw_quantiles = c(0.25,0.5,0.75)) +
facet_wrap( ~ element, scales = "free") +
scale_fill_manual(values = mycolors) +
stat_compare_means(paired = TRUE, method = "wilcox")
ggplot(data= reg_long, aes(x=value))+
geom_qq()+
facet_wrap(~variable,scales ="free")+
ggtitle("qqplot de chaque élément")
ggplot(data= reg_long, aes(x=value))+
geom_qq(reg_long, aes(x=value))+
facet_wrap(~variable,scales ="free")+
ggtitle("qqplot de chaque élément")
ggplot(data= reg_long, aes(x=value))+
stat_qq()+
facet_wrap(~variable,scales ="free")+
ggtitle("qqplot de chaque élément")
ggplot(data= reg_long, aes(x=value))+
stat_qq_line()+
facet_wrap(~variable,scales ="free")+
ggtitle("qqplot de chaque élément")
View(reg_long)
ggplot(data= reg_no_out_no_ch, aes(sample=reg_no_out_no_ch$Cu_eCo2))+
stat_qq()+
facet_wrap(~variable,scales ="free")+
ggtitle("qqplot de chaque élément")
ggplot(data= reg_no_out_no_ch, aes(sample=reg_no_out_no_ch$Cu_eCo2))+
stat_qq()+
#facet_wrap(~variable,scales ="free")+
ggtitle("qqplot de chaque élément")
i = 2
while (i < 18) {
ggplot(data= reg_no_out_no_ch, aes(sample=reg_no_out_no_ch[,i]))+
stat_qq()+
#facet_wrap(~variable,scales ="free")+
ggtitle("qqplot de chaque élément")
i=i+1
}
i = 2
while (i < 18) {
ggplot(data= reg_no_out_no_ch, aes(sample=reg_no_out_no_ch[,i]))+
stat_qq()+
#facet_wrap(~variable,scales ="free")+
ggtitle("qqplot de chaque élément")
i=i+1
}
library(naniar)
toua_no_out <- toua
k= 3
toua_no_out_NA <- toua_no_out[1:17]
for (i in 2:17) {
binf <- median(toua[,i]) - k* mad(toua[,i])
bsup <- median(toua[,i]) + k* mad(toua[,i])
outlier_idx <- which(toua_med_out_NA[,i] < binf | toua_med_out_NA[,i] > bsup)
if (length(outlier_idx) == 0) {
toua_med_out_NA = toua_med_out_NA
}
else{
toua_med_out_NA[c(outlier_idx),i] ="NA"
}
}
library(naniar)
toua_no_out <- toua
k= 3
toua_no_out_NA <- toua[1:17]
for (i in 2:17) {
binf <- median(toua[,i]) - k* mad(toua[,i])
bsup <- median(toua[,i]) + k* mad(toua[,i])
outlier_idx <- which(toua_no_out_NA[,i] < binf | toua_no_out_NA[,i] > bsup)
if (length(outlier_idx) == 0) {
toua_no_out_NA = toua_no_out_NA
}
else{
toua_no_out_NA[c(outlier_idx),i] ="NA"
}
}
View(toua_no_out_NA)
i = 2
while (i < 17) {
plot(toua_no_out[,i+1], toua_no_out[,i], xlab = names(toua_no_out[i+1]), ylab = names(toua_no_out[i]),asp=1)
abline(0,1, col = "blue")
i = i + 2}
library(naniar)
toua_no_out <- toua
k= 4
toua_no_out_NA <- toua[1:17]
for (i in 2:17) {
binf <- median(toua[,i]) - k* mad(toua[,i])
bsup <- median(toua[,i]) + k* mad(toua[,i])
outlier_idx <- which(toua_no_out_NA[,i] < binf | toua_no_out_NA[,i] > bsup)
if (length(outlier_idx) == 0) {
toua_no_out_NA = toua_no_out_NA
}
else{
toua_no_out_NA[c(outlier_idx),i] ="NA"
}
}
i = 2
while (i < 17) {
plot(toua_no_out_NA[,i+1], toua_no_out_NA[,i], xlab = names(toua_no_out_NA[i+1]), ylab = names(toua_no_out_NA[i]),asp=1)
abline(0,1, col = "blue")
i = i + 2}
i = 2
while (i < 17) {
plot(toua_no_out_NA[,i+1], toua_no_out_NA[,i], xlab = names(toua_no_out_NA[i+1]), ylab = names(toua_no_out_NA[i]),asp=1)
abline(0,1, col = "blue")
i = i + 2}
library(naniar)
toua_no_out <- toua
k= 3
toua_no_out_NA <- toua[1:17]
for (i in 2:17) {
binf <- median(toua[,i]) - k* mad(toua[,i])
bsup <- median(toua[,i]) + k* mad(toua[,i])
outlier_idx <- which(toua_no_out_NA[,i] < binf | toua_no_out_NA[,i] > bsup)
if (length(outlier_idx) == 0) {
toua_no_out_NA = toua_no_out_NA
}
else{
toua_no_out_NA[c(outlier_idx),i] ="NA"
}
}
i = 2
while (i < 17) {
plot(toua_no_out_NA[,i+1], toua_no_out_NA[,i], xlab = names(toua_no_out_NA[i+1]), ylab = names(toua_no_out_NA[i]),asp=1)
abline(0,1, col = "blue")
i = i + 2}
i = 2
while (i < 18) {
print(paste("Test de Shapiro entre les données", names(toua_no_out_NA[i])))
print(shapiro.test(toua_no_out_NA[,i])$p.value)
i = i + 1
}
i = 2
while (i < 18) {
ggplot(data= reg_no_out_no_ch, aes(sample=reg_no_out_no_ch[,i]))+
stat_qq()+
#facet_wrap(~variable,scales ="free")+
ggtitle("qqplot de chaque élément")
i=i+1
}
i = 2
while (i < 18) {
ggplot(data= reg_no_out_no_ch, aes(sample=reg_no_out_no_ch[,i]))+
stat_qq()+
facet_wrap(~reg_no_out_no_ch[,i],scales ="free")+
ggtitle("qqplot de chaque élément")
i=i+1
}
